#include <CkFtp2.h>

void pentest(void)
    {
    // đăng nhập vào FTP server tại mạng LAN; IP là ip của máy em luôn

    CkFtp2 ftp;

    ftp.put_Hostname("192.168.1.13");
    ftp.put_Username("FTP_User");
    ftp.put_Password("Hung_16011999");
    ftp.put_AuthTls(true);
    ftp.put_Port(21);

    bool success = ftp.ConnectOnly();
    if (success != true) {
        std::cout << ftp.lastErrorText();
        return;
    }

    // list tất cả các file ở thư mục root

    int i;
    int n;
    n = ftp.GetDirCount();
    if (n < 0) {
        std::cout << ftp.lastErrorText() << "\r\n";
        return;
    }

    if (n > 0) {
        for (i = 0; i <= n - 1; i++) {

            // hiển thị tên file
            std::cout << ftp.getFilename(i) << "\r\n";

            // hiển thị size file
            std::cout << ftp.GetSize(i) << "\r\n";
        }

    }

    // Download file từ FTP server
    const char *localFilename = "c:/temp/hamlet.xml";
    const char *remoteFilename = "hamlet.xml";
    success = ftp.GetFile(remoteFilename,localFilename);
    if (success != true) {
        std::cout << ftp.lastErrorText() << "\r\n";
        return;
    }

    // Upload từ local lên FTP server
    success = ftp.PutFile(localPath,remoteFilename);
    if (success != true) {
        std::cout << ftp.lastErrorText() << "\r\n";
        return;
    }   

    // xóa file trên ftp server
    success = ftp.ChangeRemoteDir("/testing");
    if (success != true) {
        std::cout << ftp.lastErrorText() << "\r\n";
        return;
    }
    success = ftp.DeleteRemoteFile("goodbye.txt");
    if (success != true) {
        std::cout << ftp.lastErrorText() << "\r\n";
        return;
    }
    // ngắt kết nối khi hoàn thành các thao tác
    ftp.Disconnect();
    std::cout << "Success." << "\r\n";
    }


